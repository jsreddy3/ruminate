"""Add is_used to questions and remove type

Revision ID: 812d73dec9e6
Revises: 8c8636cd4fbe
Create Date: 2025-07-28 22:00:28.694426

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '812d73dec9e6'
down_revision: Union[str, None] = '8c8636cd4fbe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add columns with nullable=True first
    op.add_column('conversation_questions', sa.Column('is_used', sa.Boolean(), nullable=True))
    op.add_column('conversation_questions', sa.Column('used_at', sa.DateTime(), nullable=True))
    
    # Set default value for existing rows
    op.execute("UPDATE conversation_questions SET is_used = false WHERE is_used IS NULL")
    
    # Now make is_used NOT NULL
    op.alter_column('conversation_questions', 'is_used',
                    existing_type=sa.Boolean(),
                    nullable=False)
    op.drop_column('conversation_questions', 'question_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('conversation_questions', sa.Column('question_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.execute("UPDATE conversation_questions SET question_type = 'COMPREHENSION' WHERE question_type IS NULL")
    op.alter_column('conversation_questions', 'question_type',
                    existing_type=sa.VARCHAR(),
                    nullable=False)
    op.drop_column('conversation_questions', 'used_at')
    op.drop_column('conversation_questions', 'is_used')
    # ### end Alembic commands ###
